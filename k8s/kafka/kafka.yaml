---
apiVersion: v1
kind: Service
metadata:
  name: kafka-svc
  labels:
    app: kafka-svc
spec:

  type: NodePort
  ports:
  - port: 9092
    targetPort: 9092
    nodePort: 30992
  selector:
    app: kafka
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-cm
data:
  jvm.heap: "1G"
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
spec:
  selector:
    matchLabels:
      app: kafka
  minAvailable: 2
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka-svc
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka
    spec:
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       - labelSelector:
      #           matchExpressions:
      #             - key: "app"
      #               operator: In
      #               values: 
      #               - kafka
      #         topologyKey: "kubernetes.io/hostname"
      containers:
      - name: kafka
        imagePullPolicy: Always
        image: lizhiyong2000/kafka:1.1.0
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
        ports:
        - containerPort: 9092
          name: client
        env:
        - name : ZOO_REPLICAS
          value: "3"
        - name : KAFKA_REPLICAS
          value: "3"
        - name: KAFKA_PORT
          value: "9092"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://:9092"
        # - name: KAFKA_ADVERTISED_LISTENERS
        #   value: "PLAINTEXT://192.168.2.42:9092"
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: "true"
        - name: KAFKA_SOCKET_REQUEST_MAX_BYTES
          value: "209715200"  
        #//socket.request.max.bytes
        # command:
        # - sh
        # - -c
        # - kafkaGenConfig.sh && kafkaServer.sh start-foreground
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: logdir
          mountPath: /opt/kafka/logs
      # securityContext:
      #   runAsUser: 1001
      #   fsGroup: 1001
  volumeClaimTemplates:
  - metadata:
      name: logdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
      storageClassName: nfs-storage
